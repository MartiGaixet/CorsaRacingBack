// <auto-generated />
using System;
using CorsaRacing.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CorsaRacing.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241118175454_noparticipation")]
    partial class noparticipation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CorsaRacing.Models.Championship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Championships");
                });

            modelBuilder.Entity("CorsaRacing.Models.ParticipationRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.HasIndex("UserId");

                    b.ToTable("ParticipationRace");
                });

            modelBuilder.Entity("CorsaRacing.Models.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChampionshipId")
                        .HasColumnType("int");

                    b.Property<string>("Circuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("CorsaRacing.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("CorsaRacing.Models.ParticipationRace", b =>
                {
                    b.HasOne("CorsaRacing.Models.Race", "Race")
                        .WithMany("ParticipationRace")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorsaRacing.Models.User", "Driver")
                        .WithMany("ParticipationRaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("CorsaRacing.Models.Race", b =>
                {
                    b.HasOne("CorsaRacing.Models.Championship", "Championship")
                        .WithMany("Races")
                        .HasForeignKey("ChampionshipId");

                    b.Navigation("Championship");
                });

            modelBuilder.Entity("CorsaRacing.Models.User", b =>
                {
                    b.HasOne("CorsaRacing.Models.Race", null)
                        .WithMany("Drivers")
                        .HasForeignKey("RaceId");
                });

            modelBuilder.Entity("CorsaRacing.Models.Championship", b =>
                {
                    b.Navigation("Races");
                });

            modelBuilder.Entity("CorsaRacing.Models.Race", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("ParticipationRace");
                });

            modelBuilder.Entity("CorsaRacing.Models.User", b =>
                {
                    b.Navigation("ParticipationRaces");
                });
#pragma warning restore 612, 618
        }
    }
}
